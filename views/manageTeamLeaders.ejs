<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Manage Team Leaders</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <style>
        body { background-color: #f4f6f9; }
        .container { max-width: 900px; }
        .table th, .table td { vertical-align: middle; }
        .input-sm { height: 36px; padding: 5px; text-align: center; }
        .edit-mode input { background-color: #fff !important; border: 1px solid #ced4da; }
        .btn-icon { display: flex; align-items: center; justify-content: center; padding: 4px; font-size: 14px; }
        .switch { cursor: pointer; }
    </style>
</head>
<body>

<div class="container mt-4">
    <h2 class="mb-4 text-center">📌 Manage Team Leaders</h2>

    <!-- ✅ Toast Notifications -->
    <div class="toast-container position-fixed top-0 end-0 p-3"></div>

    <!-- 📌 Add Team Leader Form -->
    <div class="card shadow-sm p-3 mb-4">
        <h5 class="mb-3">➕ Add New Team Leader</h5>
        <form id="addTeamLeaderForm" class="row g-3 align-items-center">
            <div class="col-md-7">
                <input type="text" class="form-control" id="teamLeaderName" placeholder="Enter Team Leader Name" required>
            </div>
            <div class="col-md-3">
                <select id="teamLeaderActive" class="form-select">
                    <option value="true">Active</option>
                    <option value="false">Inactive</option>
                </select>
            </div>
            <div class="col-md-2 d-grid">
                <button type="submit" class="btn btn-success btn-icon">➕ Add</button>
            </div>
        </form>
    </div>

    <!-- 📌 Team Leader Table -->
    <div class="card shadow-sm p-3">
        <h5 class="mb-3">📋 Existing Team Leaders</h5>
        <table class="table table-striped table-bordered text-center">
            <thead class="table-dark">
                <tr>
                    <th>#</th>
                    <th>Team Leader Name</th>
                    <th>Active</th>
                    <th>Edit</th>
                    <th>Delete</th>
                </tr>
            </thead>
            <tbody id="teamLeaderList">
                <!-- 📌 Team Leaders will be inserted here dynamically -->
            </tbody>
        </table>
    </div>
</div>

<!-- 📌 JavaScript -->
<script>
    function showToast(message, success = true) {
        const toastId = `toast-${Date.now()}`;
        const bgColor = success ? "bg-success" : "bg-danger";
        const toastHTML = `
            <div id="${toastId}" class="toast align-items-center text-white ${bgColor} border-0 show" role="alert">
                <div class="d-flex">
                    <div class="toast-body">${message}</div>
                    <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
                </div>
            </div>
        `;
        document.querySelector(".toast-container").innerHTML += toastHTML;
        setTimeout(() => document.getElementById(toastId).remove(), 3000);
    }

    document.addEventListener("DOMContentLoaded", () => {
        fetchTeamLeaders();

        // 📌 Add New Team Leader
        document.getElementById("addTeamLeaderForm").addEventListener("submit", async (event) => {
            event.preventDefault();
            const teamLeaderName = document.getElementById("teamLeaderName").value;
            const activeStatus = document.getElementById("teamLeaderActive").value === "true";

            const response = await fetch("/api/teamleaders", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ name: teamLeaderName, active: activeStatus })
            });

            const result = await response.json();
            if (response.ok) {
                showToast("✅ Team Leader Added!", true);
                document.getElementById("teamLeaderName").value = "";
                fetchTeamLeaders();
            } else {
                showToast("❌ Error: " + result.message, false);
            }
        });
    });

        // 📌 Fetch Team Leaders
async function fetchTeamLeaders() {
    const response = await fetch("/api/teamleaders");
    const data = await response.json();

    const teamLeaderList = document.getElementById("teamLeaderList");
    teamLeaderList.innerHTML = "";

    data.data.forEach((leader, index) => {
        const isActive = leader.active ? "checked" : "";

        teamLeaderList.innerHTML += `
            <tr id="row-${leader._id}">
                <td>${index + 1}</td>
                <td>
                    <input type="text" class="form-control input-sm teamleader-name"
                           id="name-${leader._id}"
                           value="${leader.name}" disabled>
                </td>
                <td>
                    <input type="checkbox" class="form-check-input switch" id="active-${leader._id}"
                           ${isActive} disabled>
                </td>
                <td>
                    <input type="checkbox" class="form-check-input switch" id="edit-${leader._id}"
                           onclick="toggleEditMode('${leader._id}')">
                </td>
                <td>
                    <button class="btn btn-danger btn-sm btn-icon"
                            onclick="deleteTeamLeader('${leader._id}')">🗑️</button>
                </td>
            </tr>
        `;
    });
}


// 📌 Toggle Edit Mode (Enable input fields)
window.toggleEditMode = (leaderId) => {
    const isChecked = document.getElementById(`edit-${leaderId}`).checked;
    document.getElementById(`name-${leaderId}`).disabled = !isChecked;
    document.getElementById(`active-${leaderId}`).disabled = !isChecked;
    
    if (!isChecked) {
        updateTeamLeader(leaderId);
    }
};

// 📌 Update Team Leader (Name + Active Status)
async function updateTeamLeader(leaderId) {
    const teamLeaderName = document.getElementById(`name-${leaderId}`).value;
    const isActive = document.getElementById(`active-${leaderId}`).checked;

    const response = await fetch(`/api/teamleaders/${leaderId}`, {
        method: "PUT",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ name: teamLeaderName, active: isActive })
    });

    const result = await response.json();
    if (response.ok) {
        showToast("✅ Team Leader Updated!", true);
    } else {
        showToast("❌ Error: " + result.message, false);
    }
}

        // 📌 Toggle Active Status
        window.toggleActiveStatus = async (leaderId) => {
            const isActive = document.getElementById(`active-${leaderId}`).isChecked;

            const response = await fetch(`/api/teamleaders/${leaderId}`, {
                method: "PUT",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ active: isActive })
            });

            const result = await response.json();
            if (response.ok) {
                showToast("✅ Active Status Updated!", true);
            } else {
                showToast("❌ Error: " + result.message, false);
            }
        };

// 📌 Delete Team Leader
window.deleteTeamLeader = async (leaderId) => {
    if (!confirm("Are you sure you want to delete this team leader?")) return;

    const response = await fetch(`/api/teamleaders/${leaderId}`, { method: "DELETE" });
    const result = await response.json();

    if (response.ok) {
        showToast("✅ Team Leader Deleted!", true);
        document.getElementById(`row-${leaderId}`).remove();
    } else {
        showToast("❌ Error: " + result.message, false);
    }
};

// 📌 Fet   ch team leaders when the page loads
document.addEventListener("DOMContentLoaded", fetchTeamLeaders);    
</script>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>